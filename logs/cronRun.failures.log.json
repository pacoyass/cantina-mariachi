{"timestamp":"2025-08-26T05:46:32.735Z","model":"cronRun","data":{"id":"6107acf6-029e-4cb3-8429-1cb5ab83c074","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-26T05:45:00.011Z"},"lastRunAt":"2025-08-26T05:45:00.011Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"6107acf6-029e-4cb3-8429-1cb5ab83c074\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:45:00.011Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:00.011Z\")\n            },\n            {\n              id: \"06c8cac2-88b8-4264-b7d5-df35d6fa4c53\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:45:00.010Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:03.525Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:46:32.737Z","model":"cronRun","data":{"id":"06c8cac2-88b8-4264-b7d5-df35d6fa4c53","taskName":"flush_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\"attempt to write a readonly database\") }), transient: false })","timestamp":"2025-08-26T06:45:00.010Z"},"lastRunAt":"2025-08-26T05:45:03.525Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"6107acf6-029e-4cb3-8429-1cb5ab83c074\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:45:00.011Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:00.011Z\")\n            },\n            {\n              id: \"06c8cac2-88b8-4264-b7d5-df35d6fa4c53\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:45:00.010Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:03.525Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:52:20.914Z","model":"cronRun","data":{"id":"e0ec1af5-27b8-4739-aa6c-d0c03ddcb012","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-26T05:50:00.020Z"},"lastRunAt":"2025-08-26T05:50:00.020Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"e0ec1af5-27b8-4739-aa6c-d0c03ddcb012\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.020Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.020Z\")\n            },\n            {\n              id: \"a194ea6c-3799-442c-b83e-c2a3812d1a11\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.025Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.025Z\")\n            },\n            {\n              id: \"4cacfba5-4884-481a-9a05-b6f796f7c172\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:50:00.022Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.537Z\")\n            },\n            {\n              id: \"9376de6d-4ca9-4923-887c-d8016d1a0276\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-26T06:50:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.543Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:52:20.916Z","model":"cronRun","data":{"id":"a194ea6c-3799-442c-b83e-c2a3812d1a11","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-26T05:50:00.025Z"},"lastRunAt":"2025-08-26T05:50:00.025Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"e0ec1af5-27b8-4739-aa6c-d0c03ddcb012\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.020Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.020Z\")\n            },\n            {\n              id: \"a194ea6c-3799-442c-b83e-c2a3812d1a11\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.025Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.025Z\")\n            },\n            {\n              id: \"4cacfba5-4884-481a-9a05-b6f796f7c172\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:50:00.022Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.537Z\")\n            },\n            {\n              id: \"9376de6d-4ca9-4923-887c-d8016d1a0276\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-26T06:50:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.543Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:52:20.918Z","model":"cronRun","data":{"id":"4cacfba5-4884-481a-9a05-b6f796f7c172","taskName":"retry_failed_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\"attempt to write a readonly database\") }), transient: false })","timestamp":"2025-08-26T06:50:00.022Z"},"lastRunAt":"2025-08-26T05:50:03.537Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"e0ec1af5-27b8-4739-aa6c-d0c03ddcb012\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.020Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.020Z\")\n            },\n            {\n              id: \"a194ea6c-3799-442c-b83e-c2a3812d1a11\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.025Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.025Z\")\n            },\n            {\n              id: \"4cacfba5-4884-481a-9a05-b6f796f7c172\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:50:00.022Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.537Z\")\n            },\n            {\n              id: \"9376de6d-4ca9-4923-887c-d8016d1a0276\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-26T06:50:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.543Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:52:20.919Z","model":"cronRun","data":{"id":"9376de6d-4ca9-4923-887c-d8016d1a0276","taskName":"flush_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nThe table `main.cron_locks` does not exist in the current database.","timestamp":"2025-08-26T06:50:00.023Z"},"lastRunAt":"2025-08-26T05:50:03.543Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"e0ec1af5-27b8-4739-aa6c-d0c03ddcb012\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.020Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.020Z\")\n            },\n            {\n              id: \"a194ea6c-3799-442c-b83e-c2a3812d1a11\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.025Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.025Z\")\n            },\n            {\n              id: \"4cacfba5-4884-481a-9a05-b6f796f7c172\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:50:00.022Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.537Z\")\n            },\n            {\n              id: \"9376de6d-4ca9-4923-887c-d8016d1a0276\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-26T06:50:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.543Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:15:03.619Z","model":"cronRun","data":{"id":"60562463-cacc-485f-a37c-f16bb915a0f3","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-27T02:15:00.009Z"},"lastRunAt":"2025-08-27T02:15:00.009Z"},"error":"\nInvalid `prisma.cronRun.create()` invocation:\n\n\nThe table `main.cron_runs` does not exist in the current database."}
{"timestamp":"2025-08-27T02:18:24.295Z","model":"cronRun","data":{"id":"78ef1d45-b7f0-418b-9fb2-af0c61420cb3","taskName":"flush_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nThe table `main.cron_locks` does not exist in the current database.","timestamp":"2025-08-27T03:15:00.008Z"},"lastRunAt":"2025-08-27T02:15:03.621Z"},"error":"\nInvalid `prisma.cronRun.create()` invocation:\n\n\nThe table `main.cron_runs` does not exist in the current database."}
{"timestamp":"2025-08-27T02:20:19.735Z","model":"cronRun","data":{"id":"c7f5e9bf-d511-40a8-9cb6-935b5fe9baf2","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-27T02:20:00.017Z"},"lastRunAt":"2025-08-27T02:20:00.017Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"c7f5e9bf-d511-40a8-9cb6-935b5fe9baf2\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:20:00.017Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:00.017Z\")\n            },\n            {\n              id: \"71d1becd-f2ed-4c01-b776-088d167ebe27\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:20:00.015Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:03.527Z\")\n            },\n            {\n              id: \"9c313453-01c6-406e-826b-358255784ec5\",\n              taskName: \"auth_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                instanceId: \"3c72d845-89be-4a50-aee2-688540bfecea\",\n                errors: 0\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:05.024Z\")\n            },\n            {\n              id: \"18bd6489-700a-4bf2-9af4-d1863f52770d\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                timestamp: \"2025-08-27T03:20:00.017Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:05.025Z\")\n            },\n            {\n              id: \"74daa394-889a-41e3-b685-5dc07a6d9914\",\n              taskName: \"user_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                instanceId: \"2f5c9571-c7e0-4e5d-993e-6c247091f3cc\",\n                errors: 0\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:07.058Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:20:19.737Z","model":"cronRun","data":{"id":"71d1becd-f2ed-4c01-b776-088d167ebe27","taskName":"retry_failed_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nThe table `main.cron_locks` does not exist in the current database.","timestamp":"2025-08-27T03:20:00.015Z"},"lastRunAt":"2025-08-27T02:20:03.527Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"c7f5e9bf-d511-40a8-9cb6-935b5fe9baf2\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:20:00.017Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:00.017Z\")\n            },\n            {\n              id: \"71d1becd-f2ed-4c01-b776-088d167ebe27\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:20:00.015Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:03.527Z\")\n            },\n            {\n              id: \"9c313453-01c6-406e-826b-358255784ec5\",\n              taskName: \"auth_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                instanceId: \"3c72d845-89be-4a50-aee2-688540bfecea\",\n                errors: 0\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:05.024Z\")\n            },\n            {\n              id: \"18bd6489-700a-4bf2-9af4-d1863f52770d\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                timestamp: \"2025-08-27T03:20:00.017Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:05.025Z\")\n            },\n            {\n              id: \"74daa394-889a-41e3-b685-5dc07a6d9914\",\n              taskName: \"user_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                instanceId: \"2f5c9571-c7e0-4e5d-993e-6c247091f3cc\",\n                errors: 0\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:07.058Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:20:19.737Z","model":"cronRun","data":{"id":"9c313453-01c6-406e-826b-358255784ec5","taskName":"auth_cleanup","status":"FAILED","details":{"error":"Socket timeout (the database failed to respond to a query within the configured timeout).","instanceId":"3c72d845-89be-4a50-aee2-688540bfecea","errors":0},"lastRunAt":"2025-08-27T02:20:05.024Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"c7f5e9bf-d511-40a8-9cb6-935b5fe9baf2\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:20:00.017Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:00.017Z\")\n            },\n            {\n              id: \"71d1becd-f2ed-4c01-b776-088d167ebe27\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:20:00.015Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:03.527Z\")\n            },\n            {\n              id: \"9c313453-01c6-406e-826b-358255784ec5\",\n              taskName: \"auth_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                instanceId: \"3c72d845-89be-4a50-aee2-688540bfecea\",\n                errors: 0\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:05.024Z\")\n            },\n            {\n              id: \"18bd6489-700a-4bf2-9af4-d1863f52770d\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                timestamp: \"2025-08-27T03:20:00.017Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:05.025Z\")\n            },\n            {\n              id: \"74daa394-889a-41e3-b685-5dc07a6d9914\",\n              taskName: \"user_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                instanceId: \"2f5c9571-c7e0-4e5d-993e-6c247091f3cc\",\n                errors: 0\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:07.058Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:20:19.738Z","model":"cronRun","data":{"id":"18bd6489-700a-4bf2-9af4-d1863f52770d","taskName":"flush_logs","status":"FAILED","details":{"error":"Socket timeout (the database failed to respond to a query within the configured timeout).","timestamp":"2025-08-27T03:20:00.017Z"},"lastRunAt":"2025-08-27T02:20:05.025Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"c7f5e9bf-d511-40a8-9cb6-935b5fe9baf2\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:20:00.017Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:00.017Z\")\n            },\n            {\n              id: \"71d1becd-f2ed-4c01-b776-088d167ebe27\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:20:00.015Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:03.527Z\")\n            },\n            {\n              id: \"9c313453-01c6-406e-826b-358255784ec5\",\n              taskName: \"auth_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                instanceId: \"3c72d845-89be-4a50-aee2-688540bfecea\",\n                errors: 0\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:05.024Z\")\n            },\n            {\n              id: \"18bd6489-700a-4bf2-9af4-d1863f52770d\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                timestamp: \"2025-08-27T03:20:00.017Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:05.025Z\")\n            },\n            {\n              id: \"74daa394-889a-41e3-b685-5dc07a6d9914\",\n              taskName: \"user_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                instanceId: \"2f5c9571-c7e0-4e5d-993e-6c247091f3cc\",\n                errors: 0\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:07.058Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:20:19.738Z","model":"cronRun","data":{"id":"74daa394-889a-41e3-b685-5dc07a6d9914","taskName":"user_cleanup","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nThe table `main.cron_locks` does not exist in the current database.","instanceId":"2f5c9571-c7e0-4e5d-993e-6c247091f3cc","errors":0},"lastRunAt":"2025-08-27T02:20:07.058Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"c7f5e9bf-d511-40a8-9cb6-935b5fe9baf2\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:20:00.017Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:00.017Z\")\n            },\n            {\n              id: \"71d1becd-f2ed-4c01-b776-088d167ebe27\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:20:00.015Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:03.527Z\")\n            },\n            {\n              id: \"9c313453-01c6-406e-826b-358255784ec5\",\n              taskName: \"auth_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                instanceId: \"3c72d845-89be-4a50-aee2-688540bfecea\",\n                errors: 0\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:05.024Z\")\n            },\n            {\n              id: \"18bd6489-700a-4bf2-9af4-d1863f52770d\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                timestamp: \"2025-08-27T03:20:00.017Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:05.025Z\")\n            },\n            {\n              id: \"74daa394-889a-41e3-b685-5dc07a6d9914\",\n              taskName: \"user_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                instanceId: \"2f5c9571-c7e0-4e5d-993e-6c247091f3cc\",\n                errors: 0\n              },\n              lastRunAt: new Date(\"2025-08-27T02:20:07.058Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:26:48.069Z","model":"cronRun","data":{"id":"c7a1185c-46c7-4c4f-b920-0be6e2f30b1e","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-27T02:25:00.009Z"},"lastRunAt":"2025-08-27T02:25:00.009Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"c7a1185c-46c7-4c4f-b920-0be6e2f30b1e\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:25:00.009Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:25:00.009Z\")\n            },\n            {\n              id: \"6c2a121d-88b8-407d-b70e-268e5ded3574\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:25:00.008Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:25:03.524Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:26:48.069Z","model":"cronRun","data":{"id":"6c2a121d-88b8-407d-b70e-268e5ded3574","taskName":"flush_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nThe table `main.cron_locks` does not exist in the current database.","timestamp":"2025-08-27T03:25:00.008Z"},"lastRunAt":"2025-08-27T02:25:03.524Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"c7a1185c-46c7-4c4f-b920-0be6e2f30b1e\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:25:00.009Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:25:00.009Z\")\n            },\n            {\n              id: \"6c2a121d-88b8-407d-b70e-268e5ded3574\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:25:00.008Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:25:03.524Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:31:31.609Z","model":"cronRun","data":{"id":"b48b4401-58fe-46c7-b042-02499a0529c7","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-27T02:30:00.024Z"},"lastRunAt":"2025-08-27T02:30:00.024Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"b48b4401-58fe-46c7-b042-02499a0529c7\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:00.024Z\")\n            },\n            {\n              id: \"ed80d6a8-67ac-4661-92af-55b4dbf750c3\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:30:00.028Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:00.028Z\")\n            },\n            {\n              id: \"44e26b41-d701-40c1-9eca-9ff08ec2379e\",\n              taskName: \"logs_retention_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:30:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:03.540Z\")\n            },\n            {\n              id: \"0e30e9d5-acdb-4f53-b5aa-4b66836cd92d\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                timestamp: \"2025-08-27T03:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:05.034Z\")\n            },\n            {\n              id: \"2b8e8eaa-0a62-479a-8f89-335f30fffdde\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:07.066Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:31:31.609Z","model":"cronRun","data":{"id":"ed80d6a8-67ac-4661-92af-55b4dbf750c3","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-27T02:30:00.028Z"},"lastRunAt":"2025-08-27T02:30:00.028Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"b48b4401-58fe-46c7-b042-02499a0529c7\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:00.024Z\")\n            },\n            {\n              id: \"ed80d6a8-67ac-4661-92af-55b4dbf750c3\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:30:00.028Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:00.028Z\")\n            },\n            {\n              id: \"44e26b41-d701-40c1-9eca-9ff08ec2379e\",\n              taskName: \"logs_retention_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:30:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:03.540Z\")\n            },\n            {\n              id: \"0e30e9d5-acdb-4f53-b5aa-4b66836cd92d\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                timestamp: \"2025-08-27T03:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:05.034Z\")\n            },\n            {\n              id: \"2b8e8eaa-0a62-479a-8f89-335f30fffdde\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:07.066Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:31:31.611Z","model":"cronRun","data":{"id":"44e26b41-d701-40c1-9eca-9ff08ec2379e","taskName":"logs_retention_cleanup","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nThe table `main.cron_locks` does not exist in the current database.","timestamp":"2025-08-27T03:30:00.023Z"},"lastRunAt":"2025-08-27T02:30:03.540Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"b48b4401-58fe-46c7-b042-02499a0529c7\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:00.024Z\")\n            },\n            {\n              id: \"ed80d6a8-67ac-4661-92af-55b4dbf750c3\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:30:00.028Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:00.028Z\")\n            },\n            {\n              id: \"44e26b41-d701-40c1-9eca-9ff08ec2379e\",\n              taskName: \"logs_retention_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:30:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:03.540Z\")\n            },\n            {\n              id: \"0e30e9d5-acdb-4f53-b5aa-4b66836cd92d\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                timestamp: \"2025-08-27T03:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:05.034Z\")\n            },\n            {\n              id: \"2b8e8eaa-0a62-479a-8f89-335f30fffdde\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:07.066Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:31:31.611Z","model":"cronRun","data":{"id":"0e30e9d5-acdb-4f53-b5aa-4b66836cd92d","taskName":"retry_failed_logs","status":"FAILED","details":{"error":"Socket timeout (the database failed to respond to a query within the configured timeout).","timestamp":"2025-08-27T03:30:00.024Z"},"lastRunAt":"2025-08-27T02:30:05.034Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"b48b4401-58fe-46c7-b042-02499a0529c7\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:00.024Z\")\n            },\n            {\n              id: \"ed80d6a8-67ac-4661-92af-55b4dbf750c3\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:30:00.028Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:00.028Z\")\n            },\n            {\n              id: \"44e26b41-d701-40c1-9eca-9ff08ec2379e\",\n              taskName: \"logs_retention_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:30:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:03.540Z\")\n            },\n            {\n              id: \"0e30e9d5-acdb-4f53-b5aa-4b66836cd92d\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                timestamp: \"2025-08-27T03:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:05.034Z\")\n            },\n            {\n              id: \"2b8e8eaa-0a62-479a-8f89-335f30fffdde\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:07.066Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-27T02:31:31.612Z","model":"cronRun","data":{"id":"2b8e8eaa-0a62-479a-8f89-335f30fffdde","taskName":"flush_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nThe table `main.cron_locks` does not exist in the current database.","timestamp":"2025-08-27T03:30:00.024Z"},"lastRunAt":"2025-08-27T02:30:07.066Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"b48b4401-58fe-46c7-b042-02499a0529c7\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:00.024Z\")\n            },\n            {\n              id: \"ed80d6a8-67ac-4661-92af-55b4dbf750c3\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-27T02:30:00.028Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:00.028Z\")\n            },\n            {\n              id: \"44e26b41-d701-40c1-9eca-9ff08ec2379e\",\n              taskName: \"logs_retention_cleanup\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:30:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:03.540Z\")\n            },\n            {\n              id: \"0e30e9d5-acdb-4f53-b5aa-4b66836cd92d\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"Socket timeout (the database failed to respond to a query within the configured timeout).\",\n                timestamp: \"2025-08-27T03:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:05.034Z\")\n            },\n            {\n              id: \"2b8e8eaa-0a62-479a-8f89-335f30fffdde\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-27T03:30:00.024Z\"\n              },\n              lastRunAt: new Date(\"2025-08-27T02:30:07.066Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}

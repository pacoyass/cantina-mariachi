{"timestamp":"2025-08-26T05:46:32.735Z","model":"cronRun","data":{"id":"6107acf6-029e-4cb3-8429-1cb5ab83c074","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-26T05:45:00.011Z"},"lastRunAt":"2025-08-26T05:45:00.011Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"6107acf6-029e-4cb3-8429-1cb5ab83c074\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:45:00.011Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:00.011Z\")\n            },\n            {\n              id: \"06c8cac2-88b8-4264-b7d5-df35d6fa4c53\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:45:00.010Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:03.525Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:46:32.737Z","model":"cronRun","data":{"id":"06c8cac2-88b8-4264-b7d5-df35d6fa4c53","taskName":"flush_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\"attempt to write a readonly database\") }), transient: false })","timestamp":"2025-08-26T06:45:00.010Z"},"lastRunAt":"2025-08-26T05:45:03.525Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"6107acf6-029e-4cb3-8429-1cb5ab83c074\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:45:00.011Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:00.011Z\")\n            },\n            {\n              id: \"06c8cac2-88b8-4264-b7d5-df35d6fa4c53\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:45:00.010Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:03.525Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}

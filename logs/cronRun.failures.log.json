{"timestamp":"2025-08-26T05:46:32.735Z","model":"cronRun","data":{"id":"6107acf6-029e-4cb3-8429-1cb5ab83c074","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-26T05:45:00.011Z"},"lastRunAt":"2025-08-26T05:45:00.011Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"6107acf6-029e-4cb3-8429-1cb5ab83c074\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:45:00.011Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:00.011Z\")\n            },\n            {\n              id: \"06c8cac2-88b8-4264-b7d5-df35d6fa4c53\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:45:00.010Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:03.525Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:46:32.737Z","model":"cronRun","data":{"id":"06c8cac2-88b8-4264-b7d5-df35d6fa4c53","taskName":"flush_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\"attempt to write a readonly database\") }), transient: false })","timestamp":"2025-08-26T06:45:00.010Z"},"lastRunAt":"2025-08-26T05:45:03.525Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"6107acf6-029e-4cb3-8429-1cb5ab83c074\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:45:00.011Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:00.011Z\")\n            },\n            {\n              id: \"06c8cac2-88b8-4264-b7d5-df35d6fa4c53\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:45:00.010Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:45:03.525Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:52:20.914Z","model":"cronRun","data":{"id":"e0ec1af5-27b8-4739-aa6c-d0c03ddcb012","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-26T05:50:00.020Z"},"lastRunAt":"2025-08-26T05:50:00.020Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"e0ec1af5-27b8-4739-aa6c-d0c03ddcb012\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.020Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.020Z\")\n            },\n            {\n              id: \"a194ea6c-3799-442c-b83e-c2a3812d1a11\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.025Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.025Z\")\n            },\n            {\n              id: \"4cacfba5-4884-481a-9a05-b6f796f7c172\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:50:00.022Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.537Z\")\n            },\n            {\n              id: \"9376de6d-4ca9-4923-887c-d8016d1a0276\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-26T06:50:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.543Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:52:20.916Z","model":"cronRun","data":{"id":"a194ea6c-3799-442c-b83e-c2a3812d1a11","taskName":"health_heartbeat","status":"SUCCESS","details":{"timestamp":"2025-08-26T05:50:00.025Z"},"lastRunAt":"2025-08-26T05:50:00.025Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"e0ec1af5-27b8-4739-aa6c-d0c03ddcb012\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.020Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.020Z\")\n            },\n            {\n              id: \"a194ea6c-3799-442c-b83e-c2a3812d1a11\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.025Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.025Z\")\n            },\n            {\n              id: \"4cacfba5-4884-481a-9a05-b6f796f7c172\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:50:00.022Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.537Z\")\n            },\n            {\n              id: \"9376de6d-4ca9-4923-887c-d8016d1a0276\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-26T06:50:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.543Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:52:20.918Z","model":"cronRun","data":{"id":"4cacfba5-4884-481a-9a05-b6f796f7c172","taskName":"retry_failed_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\"attempt to write a readonly database\") }), transient: false })","timestamp":"2025-08-26T06:50:00.022Z"},"lastRunAt":"2025-08-26T05:50:03.537Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"e0ec1af5-27b8-4739-aa6c-d0c03ddcb012\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.020Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.020Z\")\n            },\n            {\n              id: \"a194ea6c-3799-442c-b83e-c2a3812d1a11\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.025Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.025Z\")\n            },\n            {\n              id: \"4cacfba5-4884-481a-9a05-b6f796f7c172\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:50:00.022Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.537Z\")\n            },\n            {\n              id: \"9376de6d-4ca9-4923-887c-d8016d1a0276\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-26T06:50:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.543Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
{"timestamp":"2025-08-26T05:52:20.919Z","model":"cronRun","data":{"id":"9376de6d-4ca9-4923-887c-d8016d1a0276","taskName":"flush_logs","status":"FAILED","details":{"error":"\nInvalid `prisma.cronLock.upsert()` invocation:\n\n\nThe table `main.cron_locks` does not exist in the current database.","timestamp":"2025-08-26T06:50:00.023Z"},"lastRunAt":"2025-08-26T05:50:03.543Z"},"error":"\nInvalid `client.create()` invocation in\n/workspace/server/utils/logger.js:315:24\n\n  312     await client.create({ data: entry });\n  313   }\n  314 } else {\n→ 315   await client.create({\n          data: [\n            {\n              id: \"e0ec1af5-27b8-4739-aa6c-d0c03ddcb012\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.020Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.020Z\")\n            },\n            {\n              id: \"a194ea6c-3799-442c-b83e-c2a3812d1a11\",\n              taskName: \"health_heartbeat\",\n              status: \"SUCCESS\",\n              details: {\n                timestamp: \"2025-08-26T05:50:00.025Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:00.025Z\")\n            },\n            {\n              id: \"4cacfba5-4884-481a-9a05-b6f796f7c172\",\n              taskName: \"retry_failed_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nError occurred during query execution:\\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(SqliteError { extended_code: 1032, message: Some(\\\"attempt to write a readonly database\\\") }), transient: false })\",\n                timestamp: \"2025-08-26T06:50:00.022Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.537Z\")\n            },\n            {\n              id: \"9376de6d-4ca9-4923-887c-d8016d1a0276\",\n              taskName: \"flush_logs\",\n              status: \"FAILED\",\n              details: {\n                error: \"\\nInvalid `prisma.cronLock.upsert()` invocation:\\n\\n\\nThe table `main.cron_locks` does not exist in the current database.\",\n                timestamp: \"2025-08-26T06:50:00.023Z\"\n              },\n              lastRunAt: new Date(\"2025-08-26T05:50:03.543Z\")\n            }\n          ],\n          skipDuplicates: true\n          ~~~~~~~~~~~~~~\n        })\n\nUnknown argument `skipDuplicates`. Available options are marked with ?."}
